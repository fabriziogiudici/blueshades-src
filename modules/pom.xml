<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>it.tidalwave.blueshades</groupId>
        <artifactId>it-tidalwave-blueshades</artifactId>
        <version>1.0-ALPHA-9-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>it.tidalwave.blueshades</groupId>
    <artifactId>it-tidalwave-blueshades-modules</artifactId>
    <version>1.0-ALPHA-9-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>blueShades (modules)</name>
    <description>blueShades (modules)</description>

    <properties>
        <fest-swing.version>1.2.1</fest-swing.version>
        <javax-annotation.version>1.3.7-201002241900</javax-annotation.version>
        <javax-inject.version>1.0-201002241208</javax-inject.version>
        <joda-time.version>1.6.2-201110292322</joda-time.version>
        <logback.version>1.0.12</logback.version>
        <mistral.version>1.0-ALPHA-2</mistral.version>
        <netbeans.version>RELEASE74-1</netbeans.version>
        <openbluesky.version>0.16</openbluesky.version>
        <quaqua.version>8.0-201205051300</quaqua.version>
        <slf4j.version>1.6.1-201106101300</slf4j.version>
        <swingx.version>1.6-201002261215</swingx.version>
        <thesefoolishthings.version>1.27</thesefoolishthings.version>
        <uuid.version>2.1.5-201007271250</uuid.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>it.tidalwave.netbeans</groupId>
                <artifactId>openbluesky</artifactId>
                <version>${openbluesky.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>it.tidalwave.superpom</groupId>
                <artifactId>platform</artifactId>
                <version>${netbeans.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.imajine.image</groupId>
                <artifactId>org-imajine-image</artifactId>
                <version>${mistral.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>it.tidalwave.thesefoolishthings</groupId>
                <artifactId>thesefoolishthings</artifactId>
                <version>${thesefoolishthings.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
          
            <dependency>
                <groupId>org.easytesting</groupId>
                <artifactId>fest-swing</artifactId>
                <version>${fest-swing.version}</version>
            </dependency>
            <dependency>
                <groupId>com.kenai.nbpwr</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency> 
            <dependency>
                <groupId>com.kenai.nbpwr</groupId>
                <artifactId>org-slf4j-jdk14</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.kenai.nbpwr</groupId>
                <artifactId>ch-randelshofer-quaqua</artifactId>
                <version>${quaqua.version}</version>
            </dependency>            
            <dependency>
                <groupId>com.kenai.nbpwr</groupId>
                <artifactId>org-jdesktop-swingx</artifactId>
                <version>${swingx.version}</version>
            </dependency>
            <dependency>
                <groupId>com.kenai.nbpwr</groupId>
                <artifactId>com-eaio-uuid</artifactId>
                <version>${uuid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.kenai.nbpwr</groupId>
                <artifactId>javax-inject</artifactId>
                <version>${javax-inject.version}</version>
            </dependency>
            <dependency>
                <groupId>com.kenai.nbpwr</groupId>
                <artifactId>javax-annotation</artifactId>
                <version>${javax-annotation.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>1.3.7</version>
                <!-- WARNING: don't use 1.3.8, it has got a broken pom which brings is tons of useless stuff! -->
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${tft.lombok.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.kenai.nbpwr</groupId>
            <artifactId>javax-annotation</artifactId>
        </dependency>
        <dependency>
            <groupId>com.kenai.nbpwr</groupId>
            <artifactId>javax-inject</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- TEST DEPENDENCIES -->
        <dependency>
            <groupId>it.tidalwave.thesefoolishthings</groupId>
            <artifactId>it-tidalwave-util-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
<!--        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>-->
    </dependencies>

    <modules>
        <module>Application</module>
        <module>ApplicationCustomization</module>
        <module>Branding</module>
        <module>ArgyllAdapter</module>
        <module>Colorimetry</module>
        <module>Commons</module>
        <module>FakeAdapter</module>
        <module>Home</module>
        <module>Installers/Boot</module>
        <module>Installers/MacOSX</module>
        <module>Installers/MacOSXEmbeddedJRE</module>
        <module>ProfileEvaluation</module>
        <module>ProfileEvaluationUI</module>
        <module>ProfileEvaluationNetBeansUI</module>
        <module>TestCommons</module>
        <module>Uniformity</module>
        <module>UniformityUI</module>
        <module>UniformityNetBeans</module>
        <module>UniformityArchive</module>
    </modules>

</project>
