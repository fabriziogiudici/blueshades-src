/***********************************************************************************************************************
 *
 * blueShades - a Java UI for Argyll
 * Copyright (C) 2011-2016 by Tidalwave s.a.s. (http://www.tidalwave.it)
 *
 ***********************************************************************************************************************
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 *
 ***********************************************************************************************************************
 *
 * WWW: http://blueshades.tidalwave.it
 * SCM: https://bitbucket.org/tidalwave/blueshades-src
 *
 **********************************************************************************************************************/
package it.tidalwave.uniformity.ui.impl.measurement.netbeans;

import javax.annotation.Nonnull;
import java.awt.EventQueue;
import javax.swing.Action;
import javax.swing.JPanel;
import it.tidalwave.swing.SafeActionAdapter;

/***********************************************************************************************************************
 * 
 * @stereotype Presentation
 * 
 * @author  Fabrizio Giudici
 * @version $Id$
 *
 **********************************************************************************************************************/
public class ControlPanel extends JPanel 
  {
    private final SafeActionAdapter continueAction = new SafeActionAdapter();
    
    private final SafeActionAdapter cancelAction = new SafeActionAdapter();
    
    public ControlPanel() 
      {
        initComponents();
        setOpaque(true);
        setBackground(UniformityCheckMeasurementPresentationPanel.CONTROL_PANEL_BACKGROUND);
      }

    public ControlPanel (final @Nonnull Action continueAction, final @Nonnull Action cancelAction)
      {
        this();
        pbMeasurementInProgress.setVisible(false);
        lbInvitation.setVisible(false);
        this.continueAction.bind(continueAction);
        this.cancelAction.bind(cancelAction);
      }

    @Override
    public void removeNotify()
      {
        assert EventQueue.isDispatchThread();
        continueAction.unbind();
        cancelAction.unbind();
        super.removeNotify();
      }
    
    public void setProgressIndicatorVisible (final boolean visible) 
      {
        assert EventQueue.isDispatchThread();
        pbMeasurementInProgress.setVisible(visible);
      }
    
    public void showInvitationToOperateOnTheSensor (final @Nonnull String invitation) 
      {
        assert EventQueue.isDispatchThread();
        lbInvitation.setText(String.format("<html>%s</html>", invitation));
        lbInvitation.setVisible(true);
      }
    
    public void hideInvitationToOperateOnTheSensor()
      {
        lbInvitation.setVisible(false);
      }
    
    /*******************************************************************************************************************
     * 
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     *
     ******************************************************************************************************************/
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btContinue = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        lbInstructions = new javax.swing.JLabel();
        lbInvitation = new javax.swing.JLabel();
        pbMeasurementInProgress = new javax.swing.JProgressBar();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));

        setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
        setName(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.name")); // NOI18N
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0};
        setLayout(layout);

        btContinue.setAction(continueAction);
        btContinue.setText(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.btContinue.text")); // NOI18N
        btContinue.setMaximumSize(new java.awt.Dimension(110, 32));
        btContinue.setMinimumSize(new java.awt.Dimension(110, 32));
        btContinue.setName(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.btContinue.name")); // NOI18N
        btContinue.setPreferredSize(new java.awt.Dimension(110, 32));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        add(btContinue, gridBagConstraints);

        btCancel.setAction(cancelAction);
        btCancel.setText(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.btCancel.text")); // NOI18N
        btCancel.setMaximumSize(new java.awt.Dimension(110, 32));
        btCancel.setMinimumSize(new java.awt.Dimension(110, 32));
        btCancel.setName(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.btCancel.name")); // NOI18N
        btCancel.setPreferredSize(new java.awt.Dimension(110, 32));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        add(btCancel, gridBagConstraints);

        lbInstructions.setForeground(new java.awt.Color(255, 255, 255));
        lbInstructions.setText(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.lbInstructions.text")); // NOI18N
        lbInstructions.setName(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.lbInstructions.name")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        add(lbInstructions, gridBagConstraints);

        lbInvitation.setForeground(new java.awt.Color(255, 0, 0));
        lbInvitation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbInvitation.setText(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.lbInvitation.text")); // NOI18N
        lbInvitation.setName(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.lbInvitation.name")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(lbInvitation, gridBagConstraints);

        pbMeasurementInProgress.setIndeterminate(true);
        pbMeasurementInProgress.setName(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.pbMeasurementInProgress.name")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(pbMeasurementInProgress, gridBagConstraints);

        filler1.setName(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.filler1.name")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(57, 0, 0, 0);
        add(filler1, gridBagConstraints);

        filler2.setName(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.filler2.name")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 0.5;
        add(filler2, gridBagConstraints);

        filler3.setName(org.openide.util.NbBundle.getMessage(ControlPanel.class, "ControlPanel.filler3.name")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 0.5;
        add(filler3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btContinue;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JLabel lbInstructions;
    private javax.swing.JLabel lbInvitation;
    private javax.swing.JProgressBar pbMeasurementInProgress;
    // End of variables declaration//GEN-END:variables
}
